/ .bottom-merge
/   %section.pas
/     .mw960p.center
/       .grid-2
/         .txtcenter=image_tag "gadzorg-favicon1.png",:size => "50", :class => "vertical-center"
/         .txtcenter=image_tag "logo_alumni.png", :class => "vertical-center"
/ .bottom-merge-arrow
/   .txtcenter.pas
/     .i.zmdi.zmdi-arrow-right.vertical-center

%section.pam
  .mw960p.center
    %h1.txtcenter Ton compte Gadz.org et Soce ne font plus qu'un!

    Explication blabla Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

    =form_for  [@user_soce], :url=> module_merge_user_path(@user_soce.hruid) do |f|

      / .mtm.box-merge
      /   -@info.each do |info|
      /     %h3.txtcenter=info[0] 
      /     .grid-2.box-merge
      /       -if info[4]==0
      /         -if info[2]==info[3]
      /           .box-merge-left Données identiques:
      /           .box-merge-right= label_tag info[3],nil, :class => 'label-uniq'
      /         -else
      /           .box-merge-left
      /             = f.radio_button info[1], "platal"
      /             = f.label info[1], info[2], :value => "platal"
      /           .box-merge-right
      /             = f.radio_button info[1], "soce"
      /             = f.label info[1], info[3], :value => "soce"
      /           / 8888888888888
      /           / =f.label info[1],info[2] , :value => info[2] do
      /           /   =f.radio_button info[1],info[2]
      /           /   Hello
      /           / =f.label info[3],info[3] do
      /           /   =f.radio_button info[1],info[3]
      /           /   fffffff
      /           / 9999999999999999
      /           / =f.label info[1],info[2], :value => info[2]
      /           / =f.radio_button info[1],info[2]
      /       -else
      /         .box-merge-left Info fixe:  
      /         .box-merge-right= label_tag info[3], nil, :class => 'label-uniq'

      /   %h3.txtcenter Adresses
      /   -@addresses.each do |address|
      /     %p=address


      / .form-actions.center
      /   =submit_tag 'Envoyer',:class => "bouton bouton_bleu"

    =form_tag module_merge_update_soce_user_path do
      .mtm.box-merge
        -@info.each do |info|
          -unless  info[2]==info[3] && info[3].nil? # on affiche rien si les champs sont vides
            %h3.txtcenter=info[0]
            .grid-2.box-merge
              -if info[4]==0
                -if info[2]==info[3]
                  .box-merge-left Données identiques:
                  .box-merge-right= label_tag info[3],nil, :class => 'label-uniq'
                -else
                  .box-merge-left
                    = radio_button_tag info[1], "platal"
                    = label_tag info[1]+"_platal", (info[2].nil? ? "" : info[2])
                  .box-merge-right
                    = radio_button_tag info[1], "soce"
                    = label_tag info[1]+"_soce", (info[3].nil? ? "" : info[3])
                  / 8888888888888
                  / =f.label info[1],info[2] , :value => info[2] do
                  /   =f.radio_button info[1],info[2]
                  /   Hello
                  / =f.label info[3],info[3] do
                  /   =f.radio_button info[1],info[3]
                  /   fffffff
                  / 9999999999999999
                  / =f.label info[1],info[2], :value => info[2]
                  / =f.radio_button info[1],info[2]
              -else
                .box-merge-left Info fixe:  
                .box-merge-right= label_tag info[3], nil, :class => 'label-uniq'

        %h3.txtcenter Adresses
        = render 'layouts/module/merge/merge_banner'
        .grid-2
          .box.pam
            -@addresses_platal.select{|a| a[2]=="home"}.each_with_index do |address, i|
              .box.box-light.shadow-1.mtm
                .box-top.box-top-light.pam
                  #{address.first[3]} #{address.last}
                .box-bottom.pam
                  %div
                    -address[0].each do |field|
                      = text_field_tag field, field, :placeholder => " ", :class => "w100 slim mbs"
                    -@phones_adresse_platal.select{|n| (n["link_id"].equal? i)}.each do |phone|
                      = text_field_tag "phone", phone["display_tel"], :placeholder => " ", :class => "w100 slim mbs"
                      .small attention en ne peut recup qu'un telephone par adresse dans le site soce
                .box.pbm.plm.prm
                  .mbm 
                    -if address[1]
                      Une adresse similaire semble déjà exister et ne sera pas remplacée si tu ajoutes celle ci-dessus. 
                    Que veux-tu faire de cette adresse ?
                  = radio_button_tag "address_" + i.to_s, "oui"
                  = label_tag "address_" + i.to_s+"_oui", "Transférer dans l'annuaire SOCE"
                  = radio_button_tag "address_" + i.to_s, "non"
                  = label_tag "address_" + i.to_s+"_non", "Oublier"

          .box.pam
            -@addresses_soce.each_with_index do |address, i|
              .box.box-light.shadow-1.mtm
                .box-top.box-top-light.pam
                  #{address["ville"]} (#{address["libelle"]})
                  / = radio_button_tag "address_main" , i.to_s
                  / = label_tag "address_main_" + i.to_s, "Principale"
                .box-bottom.pam
                  .address-fields
                    %i.zmdi.zmdi-phone
                    =address["tel_fixe"]
                  .address-fields
                    %i.zmdi.zmdi-file-text
                    Fax :
                    =address["fax"]
                  .ptm
                    %i.zmdi.zmdi-pin 
                    .address-fields=address["adresse_1"]
                    .address-fields=address["adresse_2"]
                    .address-fields
                      =address["code_postal"]
                      =address["ville"]
                    .address-fields.small=address["nompays"]

                .box.pbm.plm.prm
                  .small
                    %i.zmdi.zmdi-info-outline
                    Cette adresse sera conservée et ne sera pas modifiée

        -if @socials_platal.map{|a| a.compact.present? }.include?(true) || @socials_soce.map{|a| a.compact.present? }.include?(true)
          %h3.txtcenter Réseaux sociaux
          = render 'layouts/module/merge/merge_banner'
          .grid-2
            .box.pam
              -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
              -if @socials_platal.map{|a| a.compact.present? }.include? true
                -@socials_platal.each_with_index do |social, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =social["name"]
                    .box-bottom.pam
                      %div
                        -if social["link"].include? "%s"
                          = text_field_tag "social_field_"+i.to_s, social["link"].gsub("%s", social["address"]), :placeholder => " ", :class => "w100 slim mbs"
                        -else
                          = text_field_tag "social_field_"+i.to_s, social["address"], :placeholder => " ", :class => "w100 slim mbs"
                    .box.pam
                      = radio_button_tag "social_"+i.to_s, "oui"
                      = label_tag "social_"+i.to_s+"_oui", "Transférer dans l'annuaire SOCE"
                      = radio_button_tag "social_"+i.to_s, "non"
                      = label_tag "social_"+i.to_s+"_non", "Oublier"
            .box.pam
              -if @socials_soce.map{|a| a.compact.present? }.include? true
                -@socials_soce.each_with_index do |social, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =social["libelle"]
                    .box-bottom.pam
                      .address-fields=social["adresse"]
                    .box.pbm.plm.prm
                      .small
                        %i.zmdi.zmdi-info-outline
                        Ce réseau social sera conservée et ne sera pas modifiée



        -if @diploma_platal.map{|a| a.compact.present? }.include?(true) || @diploma_soce.map{|a| a.compact.present? }.include?(true)
          %h3.txtcenter Diplômes
          = render 'layouts/module/merge/merge_banner'
          .grid-2
            .box.pam
              -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
              -if @diploma_platal.map{|a| a.compact.present? }.include? true
                -@diploma_platal.each_with_index do |diploma, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =diploma["name"]
                    .box-bottom.pam
                      %div
                        = text_field_tag "diploma_field_"+i.to_s, diploma["program"], :placeholder => "program", :class => "w100 slim mbs"
                        = text_field_tag "diploma_field_"+i.to_s, diploma["grad_year"], :placeholder => "grad_year", :class => "w100 slim mbs"

                    .box.pam
                      = radio_button_tag "diploma_"+i.to_s, "oui"
                      = label_tag "diploma_"+i.to_s+"_oui", "Transférer dans l'annuaire SOCE"
                      = radio_button_tag "diploma_"+i.to_s, "non"
                      = label_tag "diploma_"+i.to_s+"_non", "Oublier"
            .box.pam
              -if @diploma_soce.map{|a| a.compact.present? }.include? true
                -@diploma_soce.each_with_index do |diploma, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =diploma["libelle"]
                    .box-bottom.pam
                      .address-fields=diploma["annee"]
                    .box.pbm.plm.prm
                      .small
                        %i.zmdi.zmdi-info-outline
                        Ce diplome sera conservé et ne sera pas modifié

        %h3.txtcenter Emploi
        = render 'layouts/module/merge/merge_banner'
        .grid-2
          .box.pam
            -if @jobs_platal.map{|a| a.compact.present? }.include? true
              -@jobs_platal.each_with_index do |job, i|
                .box.box-light.shadow-1.mtm
                  .box-top.box-top-light.pam
                    #{job["cpny_name"]} (#{job["entry_year"]})
                  .box-bottom.pam
                    %div
                      -job.each do |field|
                        = text_field_tag field[0], field[1], :placeholder => " ", :class => "w100 slim mbs"
                  .box.pam
                    = radio_button_tag "job_"+i.to_s, "oui"
                    = label_tag "job_"+i.to_s+"_oui", "Transférer dans l'annuaire SOCE"
                    = radio_button_tag "job_"+i.to_s, "non"
                    = label_tag "job_"+i.to_s+"_non", "Oublier"
          .box.pam
            -if @jobs_soce.map{|a| a.compact.present? }.include? true
              -@jobs_soce.each_with_index do |job, i|
                .box.box-light.shadow-1.mtm
                  .box-top.box-top-light.pam
                    #{job["nom_entreprise"].present? ? job["nom_entreprise"].titleize : ""} (#{job["date_debut"]})
                  .box-bottom.pam
                    -if job["date_debut"].present? && job["date_fin"].present?
                      Du #{job["date_debut"].strftime("%d %b %Y")} à #{job["date_fin"].strftime("%d %b %Y")}
                    -elsif job["date_debut"].present?
                      Depuis #{job["date_debut"].strftime("%d %b %Y")}

                    -if job["id_etat_validation"] == -1
                      .red.small Tu as effectué récement une modification sur cet emploi, il est en attente de validation
                    .ptm.small
                      %i.zmdi.zmdi-tag
                      =job["libelle"]
                    

                    =job["raison_sociale"]
                    =job["activite_texte"]
                    .ptm
                      .address-fields
                        %i.zmdi.zmdi-phone
                        =job["tel_direct"]
                      .address-fields
                        %i.zmdi.zmdi-phone 
                        (Standard) 
                        =job["tel_standard"]
                      .address-fields
                        %i.zmdi.zmdi-email
                        =job["email"]
                      .address-fields
                        %i.zmdi.zmdi-smartphone-iphone
                        =job["gsm"]
                      .address-fields
                        %i.zmdi.zmdi-file
                        Fax 
                        =job["fax"]
                    .ptm  
                      %i.zmdi.zmdi-pin
                      Bureau
                      .address-fields=job["adresse"]
                      .address-fields=job["adresse2"]
                      .address-fields=job["adresse3"]
                      .address-fields
                        =job["code_postal"]
                        =job["ville"]
                      .address-fields.small=job["nompays"]

                    .ptm
                      %i.zmdi.zmdi-pin
                      Siège social
                      .address-fields=job["adresse_siege_1"]
                      .address-fields=job["adresse_siege_2"]
                      .address-fields=job["adresse_siege_3"]
                      .address-fields
                        =job["code_postal_entreprise"]
                        =job["ville_entreprise"]
                      .address-fields.small=job["pays_entreprise"]
                    
                    
                    / \#######################
                    / -job.each do |field|
                    /   .address-fields=field[1]
                  .box.pbm.plm.prm
                    .small
                      %i.zmdi.zmdi-info-outline
                      Cet emploi sera conservée et ne sera pas modifiée


        -if @linkedin_profile.present?        
          %h3.txtcenter [TEST] Emploi linkedin
          .grid-2
            .box.pam
              -@linkedin_profile.past_companies.each_with_index do |job, i|
                .box.box-light.shadow-1.mtm
                  .box-top.box-top-light.pam
                    #{job[:company]} (#{job["entry_year"]})
                  .box-bottom.pam
                    -job.each do |field|
                      .address-fields=field[1]


        -if @medal_platal.map{|a| a.compact.present? }.include?(true) || @diploma_soce.map{|a| a.compact.present? }.include?(true)
          %h3.txtcenter Médaille
          = render 'layouts/module/merge/merge_banner'
          .grid-2
            .box.pam
              -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
              -if @medal_platal.map{|a| a.compact.present? }.include? true
                -@medal_platal.each_with_index do |medal, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =medal["medal_text"]
                    .box-bottom.pam
                      %div
                        / = text_field_tag "diploma_field_"+i.to_s, diploma["program"], :placeholder => "program", :class => "w100 slim mbs"
                        / = text_field_tag "diploma_field_"+i.to_s, diploma["grad_year"], :placeholder => "grad_year", :class => "w100 slim mbs"

                    .box.pam
                      = radio_button_tag "medal_"+i.to_s, "oui"
                      = label_tag "medal_"+i.to_s+"_oui", "Transférer dans l'annuaire SOCE"
                      = radio_button_tag "medal_"+i.to_s, "non"
                      = label_tag "medal_"+i.to_s+"_non", "Oublier"
            .box.pam
              -if @medal_soce.map{|a| a.compact.present? }.include? true
                -@medal_soce.each_with_index do |medal, i|
                  .box.box-light.shadow-1.mtm
                    .box-top.box-top-light.pam
                      =medal["libelle"]
                    .box-bottom.pam
                      .address-fields=medal["annee"]
                    .box.pbm.plm.prm
                      .small
                        %i.zmdi.zmdi-info-outline
                        Ce médaille sera conservée et ne sera pas modifiée

    =submit_tag 'Envoyer',:class => "bouton bouton_bleu"