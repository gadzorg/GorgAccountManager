=render partial: 'addresses', locals: {addresses_platal: @addresses_platal, phones_adresse_platal: @phones_adresse_platal, addresses_soce: @addresses_soce}

-if @socials_platal.map{|a| a.compact.present? }.include?(true) || !@socials_soce.empty?
  %h3.txtcenter Réseaux sociaux
  = render 'layouts/module/merge/merge_banner'
  .grid-2
    .box.pam
      -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
      -if @socials_platal.map{|a| a.compact.present? }.include? true
        -@socials_platal.each_with_index do |social, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =social["name"]
              =hidden_field_tag "social_"+i.to_s + "[name]", social["name"]
            .box-bottom.pam
              .group-m-form
                -if social["link"].include? "%s"
                  = text_field_tag "social_"+i.to_s + "[link]", social["link"].gsub("%s", social["address"]), :placeholder => " ", :class => "w100 slim"
                  
                -else
                  = text_field_tag "social_"+i.to_s + "[address]", social["address"], :class => "w100 slim mbs"
                = label_tag "Adresse / Pseudo"
                .span.highlight.w100
                .span.bar.w100
            .box.pam
              = radio_button_tag "social_"+i.to_s + "[recuperer]", "oui", false, :required => true
              = label_tag "social_"+i.to_s + "[recuperer]" + "_oui", "Transférer dans l'annuaire SOCE", :class => "black"
              = radio_button_tag "social_"+i.to_s + "[recuperer]", "non", false, :required => true
              = label_tag "social_"+i.to_s + "[recuperer]" + "_non", "Oublier", :class => "black"
    .box.pam
      -unless @socials_soce.empty?
        -@socials_soce.each_with_index do |social, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =social["libelle"]
            .box-bottom.pam
              .address-fields=social["adresse"]
            .box.pbm.plm.prm
              .small
                %i.zmdi.zmdi-info-outline
                Ce réseau social sera conservée et ne sera pas modifié



-if @diploma_platal.map{|a| a.compact.present? }.include?(true) || !@diploma_soce.nil?
  %h3.txtcenter Diplômes
  = render 'layouts/module/merge/merge_banner'
  .grid-2
    .box.pam
      -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
      -if @diploma_platal.map{|a| a.compact.present? }.include? true
        -@diploma_platal.each_with_index do |diploma, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =diploma["name"]
              =hidden_field_tag "diploma_"+i.to_s + "[name]", diploma["name"]
            .box-bottom.pam
              .group-m-form
                = text_field_tag "diploma_"+ i.to_s + "[program]", diploma["program"], :class => "w100 slim"
                =label_tag "Intitulé formation"
                .span.highlight.w100
                .span.bar.w100
              .group-m-form
                = text_field_tag "diploma_" + i.to_s + "[grad_year]", diploma["grad_year"], :class => "w100 slim"
                =label_tag "Année d'obtention"
                .span.highlight.w100
                .span.bar.w100

            .box.pam
              = radio_button_tag "diploma_"+i.to_s + "[recuperer]", "oui", false, :required => true
              = label_tag "diploma_"+i.to_s + "[recuperer]" + "_oui", "Transférer dans l'annuaire SOCE", :class => "black"
              = radio_button_tag "diploma_"+i.to_s + "[recuperer]", "non", false, :required => true
              = label_tag "diploma_"+i.to_s + "[recuperer]" +"_non", "Oublier", :class => "black"
    .box.pam
      -if !@diploma_soce.nil?
        -@diploma_soce.each_with_index do |diploma, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =diploma["libelle"]
            .box-bottom.pam
              .address-fields=diploma["annee"]
            .box.pbm.plm.prm
              .small
                %i.zmdi.zmdi-info-outline
                Ce diplome sera conservé et ne sera pas modifié

/ %h3.txtcenter Emploi
/ = render 'layouts/module/merge/merge_banner'
/ .grid-2
/   .box.pam
/     -if @jobs_platal.map{|a| a.compact.present? }.include? true
/       -@jobs_platal.each_with_index do |job, i|
/         .box.box-light.shadow-1.mtm
/           .box-top.box-top-light.pam
/             #{job["cpny_name"]} (#{job["entry_year"]})
/           .box-bottom.pam
/             %div
/               -job.each do |field|
/                 .group-m-form
/                   = text_field_tag "job_"+i.to_s + "[" + field[0] + "]", field[1], :placeholder => " ", :class => "w100 slim"
/                   =label_tag "job_"+i.to_s + field[0]
/                   .span.highlight.w100
/                   .span.bar.w100
/           .box.pam
/             = radio_button_tag "job_"+i.to_s + "[recuperer]", "oui", false, :required => true
/             = label_tag "job_"+i.to_s+ "[recuperer]" + "_oui", "Transférer dans l'annuaire SOCE", :class => "black"
/             = radio_button_tag "job_"+i.to_s + "[recuperer]", "non", false, :required => true
/             = label_tag "job_"+i.to_s + "[recuperer]" + "_non", "Oublier", :class => "black"
/   .box.pam
/     -unless @jobs_soce.nil?
/       -@jobs_soce.each_with_index do |job, i|
/         .box.box-light.shadow-1.mtm
/           .box-top.box-top-light.pam
/             #{job["nom_entreprise"].present? ? job["nom_entreprise"].titleize : ""} (#{job["date_debut"]})
/           .box-bottom.pam
/             .address-fields=job["fonction_texte"]
/             -if job["date_debut"].present? && job["date_fin"].present?
/               Du #{job["date_debut"].strftime("%d %b %Y")} à #{job["date_fin"].strftime("%d %b %Y")}
/             -elsif job["date_debut"].present?
/               Depuis #{job["date_debut"].strftime("%d %b %Y")}

/             -if job["id_etat_validation"] == -1
/               .red.small Tu as effectué récement une modification sur cet emploi, il est en attente de validation
/             .ptm.small
/               %i.zmdi.zmdi-tag
/               =job["libelle"]
            

/             =job["raison_sociale"]
/             =job["activite_texte"]
/             .ptm
/               .address-fields
/                 %i.zmdi.zmdi-phone
/                 =job["tel_direct"]
/               .address-fields
/                 %i.zmdi.zmdi-phone 
/                 (Standard) 
/                 =job["tel_standard"]
/               .address-fields
/                 %i.zmdi.zmdi-email
/                 =job["email"]
/               .address-fields
/                 %i.zmdi.zmdi-smartphone-iphone
/                 =job["gsm"]
/               .address-fields
/                 %i.zmdi.zmdi-file
/                 Fax 
/                 =job["fax"]
/             .ptm  
/               %i.zmdi.zmdi-pin
/               Bureau
/               .address-fields=job["adresse"]
/               .address-fields=job["adresse2"]
/               .address-fields=job["adresse3"]
/               .address-fields
/                 =job["code_postal"]
/                 =job["ville"]
/               .address-fields.small=job["nompays"]

/             .ptm
/               %i.zmdi.zmdi-pin
/               Siège social
/               .address-fields=job["adresse_siege_1"]
/               .address-fields=job["adresse_siege_2"]
/               .address-fields=job["adresse_siege_3"]
/               .address-fields
/                 =job["code_postal_entreprise"]
/                 =job["ville_entreprise"]
/               .address-fields.small=job["pays_entreprise"]
            
            
/             / \#######################
/             / -job.each do |field|
/             /   .address-fields=field[1]
/           .box.pbm.plm.prm
/             .small
/               %i.zmdi.zmdi-info-outline
/               Cet emploi sera conservée et ne sera pas modifié


-#-if @linkedin_past_companies.present?
-#  %h3.txtcenter [TEST] Emploi linkedin
-#  .grid-2
-#    .box.pam
-#      -if @linkedin_past_companies.present?
-#        -@linkedin_past_companies.each_with_index do |job, i|
-#          .box.box-light.shadow-1.mtm
-#            .box-top.box-top-light.pam
-#              #{job[:company]} (#{job["entry_year"]})
-#            .box-bottom.pam
-#              -job.each do |field|
-#                .address-fields=field[1]


-if @medal_platal.map{|a| a.compact.present? }.include?(true) || !@medal_soce.nil?
  %h3.txtcenter Médaille
  = render 'layouts/module/merge/merge_banner'
  .grid-2
    .box.pam
      -# on verifie si il existe des RS ( attention on peu avoir des hash de nil)
      -if @medal_platal.map{|a| a.compact.present? }.include? true
        -@medal_platal.each_with_index do |medal, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =medal["medal_text"]
              =hidden_field_tag "medal_"+i.to_s + "[name]", medal["medal_text"]
            .box-bottom.pam
              %div
                / = text_field_tag "diploma_field_"+i.to_s, diploma["program"], :placeholder => "program", :class => "w100 slim mbs"
                / = text_field_tag "diploma_field_"+i.to_s, diploma["grad_year"], :placeholder => "grad_year", :class => "w100 slim mbs"

            .box.pam
              = radio_button_tag "medal_"+i.to_s + "[recuperer]", "oui",false, :required => true, :checked => false
              = label_tag "medal_"+i.to_s + "[recuperer]" + "_oui", "Transférer dans l'annuaire SOCE", :class => "black"
              = radio_button_tag "medal_"+i.to_s + "[recuperer]", "non",false,  :required => true, :checked => false
              = label_tag "medal_"+i.to_s + "[recuperer]" + "_non", "Oublier", :class => "black"
    .box.pam
      -unless @medal_soce.nil?
        -@medal_soce.each_with_index do |medal, i|
          .box.box-light.shadow-1.mtm
            .box-top.box-top-light.pam
              =medal["libelle"]
            .box-bottom.pam
              .address-fields=medal["annee"]
            .box.pbm.plm.prm
              .small
                %i.zmdi.zmdi-info-outline
                Ce médaille sera conservée et ne sera pas modifiée